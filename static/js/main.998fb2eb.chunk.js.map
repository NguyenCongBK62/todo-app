{"version":3,"sources":["firebase/firebase.js","redux/actions/auth.js","constants/action-types.js","components/Navigation/Navigation.js","constants/routes.js","redux/actions/notify.js","components/Notify/Notify.js","components/LandingPage/LandingPage.js","redux/selectors.js","components/NoteList/CheckItem.js","redux/actions/noteList.js","components/NoteList/Note.js","components/NoteList/NoteList.js","redux/actions/addNoteForm.js","components/AddNoteForm/CheckItem.js","components/AddNoteForm/AddNoteForm.js","components/HomePage/HomePage.js","components/SignInPage/SignInPage.js","components/SignUpPage/SignUpPage.js","components/App/App.js","serviceWorker.js","redux/reducers/addNoteForm.js","redux/reducers/noteList.js","redux/reducers/auth.js","redux/reducers/notify.js","redux/reducers/rootReducer.js","redux/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firebaseAuth","auth","signOut","dispatch","then","type","Navigation","className","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","this","props","authenticated","onClick","Component","connect","state","notifyOn","content","Notify","isShow","onDismiss","notifyOff","timeout","notify","LandingPage","style","fontSize","getNoteList","noteList","getNoteIds","Object","keys","getNoteById","getCheckItemById","noteId","checkList","CheckItem","handleEditCheckItemIsComplete","event","checked","target","editCheckItem","checkItemId","name","value","handleEditCheckItemContent","isEdit","checkItem","defaultChecked","isComplete","onChange","changeCompleteState","htmlFor","defaultValue","ownProps","payload","ref","currentUser","uid","update","Note","handleDeleteNote","deleteNote","handleEditNote","editNote","handleUpdateNote","updateNote","note","setState","hasOwnProperty","role","title","data-parent","href","map","key","remove","NoteList","aria-multiselectable","on","data","val","addCheckItem","changeCompleteStatus","handleAddCheckItem","AddNoteForm","handleChange","updateNoteForm","handleAddNote","length","addNote","isCheckListEmpty","some","entries","placeholder","disabled","addNoteForm","push","catch","error","console","log","HomePage","SignInPage","initialValues","email","password","onSubmit","values","signIn","validationSchema","Yup","shape","required","min","touched","errors","handleBlur","handleSubmit","maxWidth","top","onBlur","user","signInWithEmailAndPassword","SignUpPage","confirmPassword","signUp","test","parent","createUserWithEmailAndPassword","particlesOptions","particles","number","density","enable","value_area","color","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","retina_detect","App","params","exact","path","component","Boolean","window","location","hostname","match","initialState","isPending","rootReducer","combineReducers","action","noteList2","noteId2","store","createStore","applyMiddleware","thunkMiddleware","onAuthStateChanged","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.998fb2eb.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth'; \r\nimport 'firebase/database';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCL1LOhpt_hpfhUgTKCCD_ZGtQ7REyH5y8\",\r\n  authDomain: \"todo-app-45efc.firebaseapp.com\",\r\n  databaseURL: \"https://todo-app-45efc.firebaseio.com\",\r\n  projectId: \"todo-app-45efc\",\r\n  storageBucket: \"todo-app-45efc.appspot.com\",\r\n  messagingSenderId: \"985853056496\",\r\n  appId: \"1:985853056496:web:b87eba3276d80df8d27935\",\r\n  measurementId: \"G-B7ZJ3DKH3Z\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const database = firebase.database();\r\nexport const firebaseAuth = firebase.auth();","import { \r\n  AUTH_SUCCESS,\r\n  AUTH_ERROR,\r\n  SIGN_OUT\r\n} from '../../constants/action-types';\r\nimport { firebaseAuth } from '../../firebase/firebase';\r\n\r\nexport const signUp = (user) => {\r\n  return (dispatch) => {\r\n    firebaseAuth.createUserWithEmailAndPassword(user.email, user.password)\r\n      .then(() => dispatch({ type: AUTH_SUCCESS }))\r\n      .catch(() => dispatch({ type: AUTH_ERROR }));\r\n  }\r\n};\r\n\r\nexport const signIn = (user) => {\r\n  return (dispatch) => {\r\n    firebaseAuth.signInWithEmailAndPassword(user.email, user.password)\r\n      .then(() => dispatch({ type: AUTH_SUCCESS }))\r\n      .catch(() => dispatch({ type: AUTH_ERROR }));\r\n  }\r\n}\r\n\r\nexport const signOut = () => {\r\n  return (dispatch) => {\r\n    firebaseAuth.signOut()\r\n    .then(() => dispatch({ type: SIGN_OUT }));\r\n  }\r\n};\r\n\r\nexport const verifyAuth = () => {\r\n  return (dispatch) => {\r\n    firebaseAuth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        dispatch({ type: AUTH_SUCCESS });\r\n      } else {\r\n        dispatch(signOut());\r\n      }\r\n    });\r\n  }\r\n};","export const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\nexport const SIGN_OUT ='SIGN_OUT';\r\n\r\nexport const UPDATE_NOTE_FORM = 'UPDATE_NOTE_FORM';\r\nexport const ADD_CHECK_ITEM = 'ADD_CHECK_ITEM';\r\nexport const ADD_NOTE_SUCCESS = 'ADD_NOTE_SUCCESS';\r\n\r\nexport const GET_NOTE_LIST_PENDING = 'GET_NOTE_LIST_PENDING';\r\nexport const GET_NOTE_LIST_SUCCESS = 'GET_NOTE_LIST_SUCCESS';\r\nexport const CHANGE_COMPLETE_STATE = 'CHANGE_COMPLETE_STATE';\r\nexport const DELETE_NOTE = 'DELETE_NOTE';\r\nexport const EDIT_NOTE = 'EDIT_NOTE';\r\nexport const EDIT_CHECK_ITEM = 'EDIT_CHECK_ITEM';\r\nexport const UPDATE_NOTE = 'UPDATE_NOTE';\r\n\r\nexport const NOTIFY_ON = 'NOTIFY_ON';\r\nexport const NOTIFY_OFF = 'NOTIFY_OFF';","import React, { Component, Fragment } from \"react\";\r\nimport \"./Navigation.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { signOut } from \"../../redux/actions/auth\";\r\n\r\nexport class Navigation extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-light bg-light\">\r\n        <Link to={ROUTES.HOME} className=\"navbar-brand\">\r\n          TODO\r\n        </Link>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-toggle=\"collapse\"\r\n          data-target=\"#collapsibleNavId\"\r\n          aria-controls=\"collapsibleNavId\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n\r\n        <div\r\n          className=\"collapse navbar-collapse justify-content-end\"\r\n          id=\"collapsibleNavId\"\r\n        >\r\n          <ul className=\"nav navbar-nav mt-2 mt-lg-0\">\r\n            {this.props.authenticated ? (\r\n              <li className=\"nav-item active\" onClick={this.props.signOut}>\r\n                <Link to={ROUTES.LANDING} className=\"nav-link\">\r\n                  Sign out\r\n                </Link>\r\n              </li>\r\n            ) : (\r\n              <Fragment>\r\n                <li className=\"nav-item active\">\r\n                  <Link to={ROUTES.SIGN_IN} className=\"nav-link\">\r\n                    Sign in\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item active\">\r\n                  <Link to={ROUTES.SIGN_UP} className=\"nav-link\">\r\n                    Sign up\r\n                  </Link>\r\n                </li>\r\n              </Fragment>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  authenticated: state.auth.authenticated\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    signOut: () => dispatch(signOut())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navigation);\r\n","export const LANDING = '/';\r\nexport const HOME = '/home';\r\nexport const SIGN_IN = '/signin';\r\nexport const SIGN_UP = '/signup';\r\n","import {\r\n  NOTIFY_ON,\r\n  NOTIFY_OFF\r\n} from '../../constants/action-types';\r\n\r\nexport const notifyOn = (content) => ({\r\n  type: NOTIFY_ON,\r\n  content: content\r\n});\r\n\r\nexport const notifyOff = () => ({\r\n  type: NOTIFY_OFF\r\n});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { notifyOff } from '../../redux/actions/notify';\r\nimport { Alert, AlertContainer } from \"react-bs-notifier\";\r\n\r\nclass Notify extends Component {\r\n  render() {\r\n    if (!this.props.isShow) return null;\r\n\r\n    return (\r\n      <AlertContainer>\r\n        <Alert type=\"success\" onDismiss={this.props.notifyOff} timeout={1000}>\r\n          {this.props.content}\r\n        </Alert>\r\n      </AlertContainer>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isShow: state.notify.isShow,\r\n    content: state.notify.content\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    notifyOff: () => dispatch(notifyOff())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notify);","import React, { Component } from \"react\";\r\nimport \"./LandingPage.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"LandingPage text-center\">\r\n        <div className=\"bg-image\"></div>\r\n        <div className=\"bg-text p-5\">\r\n          <h1 className=\"display-1 text-light\" style={{ fontSize: \"10vw\" }}>\r\n            Create your TODO list\r\n          </h1>\r\n          <Link to={ROUTES.SIGN_IN}>\r\n            <button type=\"button\" className=\"btn btn-outline-light btn-lg\">\r\n              Get start\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","\r\nexport const getIsSignedIn = (state) => state.auth.isSignedIn;\r\n\r\nexport const getNoteList = (state) => state.noteList.noteList;\r\n\r\nexport const getNoteIds = (state) => Object.keys(getNoteList(state));\r\nexport const getNoteById = (state, id) => getNoteList(state)[id];\r\n\r\nexport const getCheckItemById = (state, noteId, id) => getNoteById(state, noteId).checkList[id];","import React, { Component, Fragment } from 'react';\r\nimport './CheckItem.css';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getCheckItemById } from '../../redux/selectors';\r\nimport { changeCompleteState, editCheckItem } from '../../redux/actions/noteList';\r\n\r\nclass CheckItem extends Component {\r\n  handleEditCheckItemIsComplete = (event) => {\r\n    const { checked } = event.target;\r\n    this.props.editCheckItem({ noteId: this.props.noteId, checkItemId: this.props.id, name: 'isComplete', value: checked });\r\n  }\r\n\r\n  handleEditCheckItemContent = (event) => {\r\n    const { value } = event.target;\r\n    this.props.editCheckItem({ noteId: this.props.noteId, checkItemId: this.props.id, name: 'content', value: value });\r\n  }\r\n\r\n  render() {\r\n    const { noteId, id, isEdit, checkItem } = this.props;\r\n    return (\r\n      <div className=\"custom-control custom-checkbox mr-sm-2 mt-2\">\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isComplete\"\r\n          className=\"custom-control-input\"\r\n          id={id + noteId}\r\n          defaultChecked={checkItem.isComplete ? true : false}\r\n          onChange={isEdit\r\n            ? this.handleEditCheckItemIsComplete\r\n            : () => this.props.changeCompleteState({ noteId: noteId, checkItemId: id, isComplete: checkItem.isComplete })\r\n          }\r\n        />       \r\n        <label className=\"custom-control-label strike-through\" htmlFor={id + noteId}>\r\n          {isEdit\r\n            ? <input \r\n              type=\"text\"\r\n              name=\"content\"\r\n              className=\"form-control\"\r\n              id={id + noteId}\r\n              defaultValue={checkItem.content}\r\n              onChange={this.handleEditCheckItemContent}\r\n            />\r\n            : <Fragment>\r\n                {checkItem.content}\r\n              </Fragment>         \r\n          }           \r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { noteId, id } = ownProps;\r\n  return {\r\n    checkItem: getCheckItemById(state, noteId, id)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    changeCompleteState: (payload) => dispatch(changeCompleteState(payload)),\r\n    editCheckItem: (payload) => dispatch(editCheckItem(payload))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckItem);","import {\r\n  GET_NOTE_LIST_PENDING,\r\n  GET_NOTE_LIST_SUCCESS,\r\n  CHANGE_COMPLETE_STATE,\r\n  DELETE_NOTE,\r\n  EDIT_NOTE,\r\n  EDIT_CHECK_ITEM,\r\n  UPDATE_NOTE\r\n} from '../../constants/action-types';\r\nimport { database, firebaseAuth } from '../../firebase/firebase';\r\n\r\nexport const getNoteList = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: GET_NOTE_LIST_PENDING });\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid).on('value', (data) => {\r\n      dispatch({ type: GET_NOTE_LIST_SUCCESS, noteList: data.val() })\r\n    });\r\n  }\r\n};\r\n\r\nexport const changeCompleteState = (payload) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid + '/' + payload.noteId + '/checkList/' + payload.checkItemId)\r\n      .update({ isComplete: !payload.isComplete })\r\n      .then(() => dispatch({ type: CHANGE_COMPLETE_STATE }));\r\n  }\r\n};\r\n\r\nexport const deleteNote = (noteId) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid + '/' + noteId + '/')\r\n      .remove()\r\n      .then(() => dispatch({ type: DELETE_NOTE }));\r\n  }\r\n};\r\n\r\nexport const editNote = (payload) => ({\r\n  type: EDIT_NOTE,\r\n  payload\r\n});\r\n\r\nexport const editCheckItem = (payload) => ({\r\n  type: EDIT_CHECK_ITEM,\r\n  payload\r\n});\r\n\r\nexport const updateNote = (payload) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid + '/' + payload.noteId)\r\n      .update(payload.note)\r\n      .then(() => dispatch({ type: UPDATE_NOTE }));\r\n  }\r\n};","import React, { Component } from 'react';\r\nimport CheckItem from './CheckItem';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { deleteNote, editNote, updateNote } from '../../redux/actions/noteList';\r\nimport { notifyOn } from '../../redux/actions/notify';\r\nimport { getNoteById } from '../../redux/selectors';\r\n\r\nexport class Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isEdit: false\r\n    }\r\n  }\r\n\r\n  handleDeleteNote = () => {\r\n    this.props.deleteNote(this.props.id);\r\n    this.props.notifyOn(\"Delete note successfully\");\r\n  }\r\n\r\n  handleEditNote = (event) => {\r\n    const { name, value } = event.target;\r\n    this.props.editNote({ noteId: this.props.id, name: name, value: value });\r\n  }\r\n\r\n  handleUpdateNote = () => {\r\n    this.props.updateNote({ noteId: this.props.id, note: this.props.note });\r\n    this.props.notifyOn(\"Edit note successfully\");\r\n    this.setState({ isEdit: !this.state.isEdit });\r\n  }\r\n  \r\n  render() {\r\n    const { isEdit } = this.state;\r\n    const { id, note } = this.props;\r\n    const checkList = note.hasOwnProperty('checkList') ? Object.keys(note.checkList) : [];\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-header py-2\" role=\"tab\">\r\n          <h5 className=\"mt-1 float-left\">\r\n            {isEdit\r\n              ? <input\r\n                  type=\"text\"\r\n                  name=\"title\"\r\n                  className=\"form-control text-warning\"\r\n                  defaultValue={note.title}\r\n                  onChange={this.handleEditNote}\r\n                />\r\n              : <a className=\"text-decoration-none text-warning\" data-toggle=\"collapse\" data-parent=\"#noteList\" href={'#' + id} aria-expanded=\"true\">\r\n                  {note.title}              \r\n                </a>\r\n            }            \r\n          </h5>\r\n          <button className=\"btn btn-danger float-right\" onClick={this.handleDeleteNote}><i className=\"fa fa-trash\"/></button>\r\n        </div>\r\n        <div id={id} className=\"collapse in\" role=\"tabpanel\">\r\n          <div className=\"card-body\">\r\n            {isEdit\r\n              ? <textarea \r\n                  type=\"text\"\r\n                  name=\"content\"\r\n                  className=\"form-control\"\r\n                  defaultValue={note.content}\r\n                  onChange={this.handleEditNote}\r\n                />\r\n              : <p>{note.content}</p>\r\n            }\r\n                        \r\n            {checkList.map((checkItemId) => <CheckItem noteId={id} id={checkItemId} isEdit={isEdit} key={checkItemId} />)}\r\n\r\n            {isEdit\r\n              ? <button className=\"btn btn-success mt-2\" onClick={this.handleUpdateNote}>\r\n                  <i className=\"fa fa-save\" /> Save\r\n                </button>\r\n              : <button className=\"btn btn-warning mt-2\" onClick={() => this.setState({ isEdit: !this.state.isEdit })}>\r\n                  <i className=\"fa fa-edit\" /> Edit\r\n                </button>\r\n            }            \r\n          </div>         \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const { id } = ownProps;\r\n  return {\r\n    note: getNoteById(state, id)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    deleteNote: (noteId) => dispatch(deleteNote(noteId)),\r\n    editNote: (payload) => dispatch(editNote(payload)),\r\n    updateNote: (payload) => dispatch(updateNote(payload)),\r\n    notifyOn: (content) => dispatch(notifyOn(content))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Note);\r\n","import React, { Component } from 'react';\r\nimport Note from './Note';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getNoteList } from '../../redux/actions/noteList';\r\nimport { getNoteIds } from '../../redux/selectors';\r\n\r\nclass NoteList extends Component {  \r\n  componentDidMount() {\r\n    this.props.getNoteList();\r\n  }\r\n    \r\n  render() { \r\n    \r\n    return (\r\n      <div className=\"col\">\r\n        <div id=\"noteList\" role=\"tablist\" aria-multiselectable=\"true\">\r\n          {this.props.noteList.map((noteId, key) => <Note id={noteId} key={key} />)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    noteList: getNoteIds(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    getNoteList: () => dispatch(getNoteList())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NoteList);","import {\r\n  ADD_CHECK_ITEM,\r\n  ADD_NOTE_SUCCESS,\r\n  UPDATE_NOTE_FORM\r\n} from '../../constants/action-types';\r\nimport { database, firebaseAuth } from '../../firebase/firebase';\r\n\r\nexport const updateNoteForm = (payload) => ({\r\n  type: UPDATE_NOTE_FORM,\r\n  payload\r\n});\r\n\r\nexport const addCheckItem = (checkItem) => ({\r\n  type: ADD_CHECK_ITEM,\r\n  checkItem\r\n});\r\n\r\nexport const addNote = (note) => {\r\n  return (dispatch) => {\r\n    database.ref('noteData/' + firebaseAuth.currentUser.uid).push(note)\r\n      .then(() => dispatch({ type: ADD_NOTE_SUCCESS }))\r\n      .catch(error => console.log(error));\r\n  }\r\n};\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport './CheckItem.css';\r\nimport { connect } from 'react-redux';\r\nimport { addCheckItem } from '../../redux/actions/addNoteForm';\r\n\r\nclass CheckItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isComplete: false\r\n    }\r\n  }\r\n\r\n  changeCompleteStatus = () => {\r\n    const { content } = this.props;\r\n    if (typeof(content) === 'undefined' || content === '') {\r\n      this.props.addCheckItem({ [this.props.id]: {} });\r\n    } else {\r\n      this.props.addCheckItem({ [this.props.id]: { content: content, isComplete: !this.state.isComplete } })\r\n    }    \r\n    this.setState({ isComplete: !this.state.isComplete });\r\n  }\r\n\r\n  handleAddCheckItem = (event) => {\r\n    if (event.target.value === '') {\r\n      this.props.addCheckItem({ [this.props.id]: {} });\r\n    } else {\r\n      this.props.addCheckItem({ [this.props.id]: { ...this.state, content: event.target.value } })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id, content } = this.props;\r\n    return (\r\n      <div className=\"input-group mb-1\">\r\n        <div className=\"input-group-prepend\">\r\n          <div className=\"input-group-text\">\r\n            <input type=\"checkbox\" onChange={this.changeCompleteStatus} />\r\n          </div>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className={this.state.isComplete ? \"form-control strike-through-add-note-form\" : \"form-control\"}\r\n          id={id}\r\n          defaultValue={content}\r\n          onChange={this.handleAddCheckItem}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addCheckItem: (checkItem) => dispatch(addCheckItem(checkItem))\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CheckItem);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  updateNoteForm,\r\n  addCheckItem,\r\n  addNote\r\n} from \"../../redux/actions/addNoteForm\";\r\nimport { notifyOn } from \"../../redux/actions/notify\";\r\n\r\nimport CheckItem from \"./CheckItem\";\r\n\r\nclass AddNoteForm extends Component {\r\n  handleChange = event => {\r\n    const { name, value } = event.target;\r\n    this.props.updateNoteForm({ name: name, value: value });\r\n  };\r\n\r\n  handleAddNote = checkList => {\r\n    const { title, content } = this.props;\r\n    let note = {\r\n      title: title,\r\n      content: content,\r\n      checkList: { ...this.props.checkList }\r\n    };\r\n\r\n    if (title === \"\" && content === \"\") {\r\n      for (let value of checkList) {\r\n        if (Object.keys(value.checkItem).length) {\r\n          note.title = value.checkItem.content;\r\n          break;\r\n        }\r\n      }\r\n    } else if (title === \"\") {\r\n      note.title = content;\r\n    }\r\n\r\n    this.props.addNote(note);\r\n    this.props.notifyOn(\"Add note successfully\");\r\n  };\r\n\r\n  isCheckListEmpty = checkList => {\r\n    return !checkList.some(value => Object.keys(value.checkItem).length);\r\n  };\r\n\r\n  render() {\r\n    const { title, content } = this.props;\r\n    const checkList = Object.entries(this.props.checkList).map(value => ({\r\n      id: value[0],\r\n      checkItem: value[1]\r\n    })); //convert object to array\r\n    return (\r\n      <form className=\"col-4 d-none d-md-block\">\r\n        <div className=\"card border-success position-fixed\">\r\n          <div className=\"card-header text-center\">Add note</div>\r\n          <div className=\"card-body text-success\">\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"title\">Title</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"title\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter title\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label className=\"mt-3\" htmlFor=\"content\">\r\n                Content\r\n              </label>\r\n              <textarea\r\n                type=\"text\"\r\n                name=\"content\"\r\n                className=\"form-control\"\r\n                placeholder=\"Enter content\"\r\n                onChange={this.handleChange}\r\n              />\r\n              <label className=\"mt-3\" htmlFor=\"noteChecklist\">\r\n                Checklist\r\n              </label>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-light btn-sm ml-2 mb-2\"\r\n                onClick={() =>\r\n                  this.props.addCheckItem({ [checkList.length]: {} })\r\n                }\r\n              >\r\n                <i className=\"fa fa-plus-square\" />\r\n              </button>\r\n              {checkList.map((value, key) => (\r\n                <CheckItem\r\n                  id={value.id}\r\n                  content={value.checkItem.content}\r\n                  key={key}\r\n                />\r\n              ))}\r\n            </div>\r\n            <input\r\n              type=\"reset\"\r\n              className=\"btn btn-success btn-block\"\r\n              onClick={() => this.handleAddNote(checkList)}\r\n              value=\"Add\"\r\n              disabled={\r\n                title === \"\" &&\r\n                content === \"\" &&\r\n                this.isCheckListEmpty(checkList)\r\n                  ? true\r\n                  : false\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    title: state.addNoteForm.title,\r\n    content: state.addNoteForm.content,\r\n    checkList: state.addNoteForm.checkList\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateNoteForm: payload => dispatch(updateNoteForm(payload)),\r\n    addNote: note => dispatch(addNote(note)),\r\n    addCheckItem: checkItem => dispatch(addCheckItem(checkItem)),\r\n    notifyOn: content => dispatch(notifyOn(content))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddNoteForm);\r\n","import React, { Component } from 'react';\r\nimport './HomePage.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport NoteList from '../NoteList/NoteList';\r\nimport AddNoteForm from '../AddNoteForm/AddNoteForm';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    if (!this.props.authenticated) return <Redirect to={ROUTES.SIGN_IN} />\r\n\r\n    return (\r\n      <div className=\"HomePage container mt-4 p-0 text-left\">\r\n        <div className=\"row justify-content-center\">\r\n          <NoteList />\r\n          <AddNoteForm />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.auth.authenticated\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(HomePage);","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signIn } from '../../redux/actions/auth';\r\n\r\nclass SignInPage extends Component {\r\n  render() {\r\n    if (this.props.authenticated) return <Redirect to={ROUTES.HOME} />\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{ email: '', password: '' }}\r\n        onSubmit={values => {\r\n          this.props.signIn({ email: values.email, password: values.password });\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n          password: Yup.string()\r\n            .required('Required')\r\n            .min(6, 'Password must be at least 6 characters')\r\n        })}\r\n      >\r\n        {(props) => {\r\n          const { touched, errors, handleChange, handleBlur, handleSubmit } = props;\r\n          return (\r\n            <form className=\"card bg-transparent text-dark mx-auto\" style={{ maxWidth: '18rem', top: '120px' }} onSubmit={handleSubmit}>\r\n              <div className=\"card-header text-center\">Sign In</div>\r\n              <div className=\"card-body text-left\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"                   \r\n                    className={(errors.email && touched.email) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email\r\n                    ? <small className=\"text-danger\">{errors.email}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"mt-2\" htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className={(errors.password && touched.password) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.password && touched.password\r\n                    ? <small className=\"text-danger\">{errors.password}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                {this.props.error\r\n                  ? <small className=\"text-danger\">Incorrect email or password</small>\r\n                  : null\r\n                }\r\n                <input\r\n                  className=\"btn btn-dark btn-block mt-3\"\r\n                  type=\"submit\"\r\n                  value=\"Sign in\"\r\n                  disabled={errors.password || errors.email}\r\n                />\r\n                <p className=\"mt-2\">\r\n                  Don't have an account?\r\n                  <Link to={ROUTES.SIGN_UP} className=\"text-decoration-none\">  Sign up</Link>\r\n                </p>                \r\n              </div>\r\n            </form>\r\n          )\r\n        }}\r\n      </Formik>      \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.auth.authenticated,\r\n    error: state.auth.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (user) => dispatch(signIn(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage);","import React, { Component } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { signUp } from '../../redux/actions/auth';\r\n\r\nclass SignUpPage extends Component {\r\n  render() {\r\n    if (this.props.authenticated) return <Redirect to={ROUTES.HOME} />\r\n\r\n    return (\r\n      <Formik\r\n        initialValues={{ email: '', password: '', confirmPassword: '' }}\r\n        onSubmit={values => {\r\n          this.props.signUp({ email: values.email, password: values.password });\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          email: Yup.string()\r\n            .email('Invalid email address')\r\n            .required('Required'),\r\n          password: Yup.string()\r\n            .required('Required')\r\n            .min(6, 'Password must be at least 6 characters'),\r\n          confirmPassword: Yup.string()\r\n            .required('Required')\r\n            .min(6, 'Password must be at least 6 characters')\r\n            .test('Passwords match', 'Confirm Password & Password must be same', function (value) {\r\n              return this.parent.password === value;\r\n            })\r\n        })}\r\n      >\r\n        {(props) => {\r\n          const { touched, errors, handleChange, handleBlur, handleSubmit } = props;\r\n          return (\r\n            <form className=\"card bg-transparent text-dark mx-auto\" style={{ maxWidth: '18rem', top: '120px' }} onSubmit={handleSubmit}>\r\n              <div className=\"card-header text-center\">Sign Up</div>\r\n              <div className=\"card-body text-left\">\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    className={(errors.email && touched.email) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter email\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.email && touched.email\r\n                    ? <small className=\"text-danger\">{errors.email}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"mt-2\" htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    className={(errors.password && touched.password) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Enter password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  {errors.password && touched.password\r\n                    ? <small className=\"text-danger\">{errors.password}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label className=\"mt-2\" htmlFor=\"password\">Confirm Password</label>\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    className={(errors.confirmPassword && touched.confirmPassword) ? \"form-control border border-danger\" : \"form-control\"}\r\n                    placeholder=\"Confirm password\"\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />             \r\n                  {errors.confirmPassword && touched.confirmPassword\r\n                    ? <small className=\"text-danger\">{errors.confirmPassword}</small>\r\n                    : null\r\n                  }\r\n                </div>\r\n                {this.props.error\r\n                  ? <small className=\"text-danger\">Email has already exists</small>\r\n                  : null\r\n                }\r\n                <input\r\n                  className=\"btn btn-dark btn-block mt-3\"\r\n                  type=\"submit\"\r\n                  value=\"Sign up\"\r\n                  disabled={errors.password || errors.email || errors.confirmPassword}                />\r\n                <p className=\"mt-2\">\r\n                  Already have an account?\r\n                  <Link to={ROUTES.SIGN_IN} className=\"text-decoration-none\">  Sign in</Link>\r\n                </p> \r\n              </div>\r\n            </form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    authenticated: state.auth.authenticated,\r\n    error: state.auth.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signUp: (user) => dispatch(signUp(user))\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage);","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Particles from \"react-particles-js\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport * as ROUTES from \"../../constants/routes\";\n\nimport Navigation from \"../Navigation/Navigation\";\nimport Notify from \"../Notify/Notify\";\nimport LandingPage from \"../LandingPage/LandingPage\";\nimport HomePage from \"../HomePage/HomePage\";\nimport SignInPage from \"../SignInPage/SignInPage\";\nimport SignUpPage from \"../SignUpPage/SignUpPage\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 180,\n      density: {\n        enable: true,\n        value_area: 868.1035095057337\n      }\n    },\n    color: {\n      value: \"#ffffff\"\n    },\n    shape: {\n      type: \"circle\",\n      stroke: {\n        width: 0,\n        color: \"#000000\"\n      },\n      polygon: {\n        nb_sides: 4\n      },\n      image: {\n        src: \"img/github.svg\",\n        width: 100,\n        height: 100\n      }\n    },\n    opacity: {\n      value: 0.5,\n      random: false,\n      anim: {\n        enable: false,\n        speed: 1,\n        opacity_min: 0.1,\n        sync: false\n      }\n    },\n    size: {\n      value: 3,\n      random: true,\n      anim: {\n        enable: false,\n        speed: 40,\n        size_min: 0.1,\n        sync: false\n      }\n    },\n    line_linked: {\n      enable: true,\n      distance: 150,\n      color: \"#ffffff\",\n      opacity: 0.4,\n      width: 1\n    },\n    move: {\n      enable: true,\n      speed: 6,\n      direction: \"none\",\n      random: false,\n      straight: false,\n      out_mode: \"out\",\n      bounce: false,\n      attract: {\n        enable: false,\n        rotateX: 600,\n        rotateY: 1200\n      }\n    }\n  },\n  interactivity: {\n    detect_on: \"canvas\",\n    events: {\n      onhover: {\n        enable: true,\n        mode: \"repulse\"\n      },\n      onclick: {\n        enable: true,\n        mode: \"push\"\n      },\n      resize: true\n    },\n    modes: {\n      grab: {\n        distance: 400,\n        line_linked: {\n          opacity: 1\n        }\n      },\n      bubble: {\n        distance: 400,\n        size: 40,\n        duration: 2,\n        opacity: 8,\n        speed: 3\n      },\n      repulse: {\n        distance: 200,\n        duration: 0.4\n      },\n      push: {\n        particles_nb: 4\n      },\n      remove: {\n        particles_nb: 2\n      }\n    }\n  },\n  retina_detect: true\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"container-fluid mx-0 px-0\">\n          <Particles className=\"particles\" params={particlesOptions} />\n          <Navigation />\n          <Notify />\n          <Switch>\n            <Route exact path={ROUTES.LANDING} component={LandingPage} />\n            <Route path={ROUTES.HOME} component={HomePage} />\n            <Route path={ROUTES.SIGN_IN} component={SignInPage} />\n            <Route path={ROUTES.SIGN_UP} component={SignUpPage} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\r\n  ADD_CHECK_ITEM,\r\n  ADD_NOTE_SUCCESS,\r\n  UPDATE_NOTE_FORM\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  title: '',\r\n  content: '',\r\n  checkList: {}\r\n}\r\n\r\nexport const addNoteForm = (state = initialState, action = {}) => {\r\n  switch (action.type) {   \r\n    case UPDATE_NOTE_FORM:\r\n      return { ...state, [action.payload.name]: action.payload.value }\r\n    \r\n    case ADD_CHECK_ITEM:\r\n      return { ...state, checkList: { ...state.checkList, ...action.checkItem } }\r\n\r\n    case ADD_NOTE_SUCCESS:\r\n      return initialState;\r\n  \r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  GET_NOTE_LIST_PENDING,\r\n  GET_NOTE_LIST_SUCCESS,\r\n  CHANGE_COMPLETE_STATE,\r\n  DELETE_NOTE,\r\n  EDIT_NOTE,\r\n  EDIT_CHECK_ITEM,\r\n  UPDATE_NOTE\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  isPending: false,\r\n  noteList: {}\r\n}\r\n\r\nexport const noteList = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case GET_NOTE_LIST_PENDING:\r\n      return { ...state, isPending: true }\r\n\r\n    case GET_NOTE_LIST_SUCCESS:\r\n      return { ...state, noteList: { ...action.noteList }, isPending: false }\r\n\r\n    case CHANGE_COMPLETE_STATE:\r\n      return state;\r\n\r\n    case DELETE_NOTE:\r\n      return state;\r\n\r\n    case EDIT_NOTE:\r\n      const noteList = state.noteList;\r\n      const noteId = state.noteList[action.payload.noteId];\r\n      return { \r\n        ...state, \r\n        noteList: {\r\n          ...noteList,\r\n          [action.payload.noteId]: {\r\n            ...noteId,\r\n            [action.payload.name]: action.payload.value\r\n          }\r\n        }\r\n      }\r\n\r\n    case EDIT_CHECK_ITEM:\r\n      const noteList2 = state.noteList; //doi ten vi trung ten voi case EDIT_NOTE\r\n      const noteId2 = state.noteList[action.payload.noteId]; //doi ten vi trung ten voi case EDIT_NOTE\r\n      const checkList = state.noteList[action.payload.noteId].checkList;\r\n      const checkItemId = state.noteList[action.payload.noteId].checkList[action.payload.checkItemId];\r\n      return {\r\n        ...state,\r\n        noteList: {\r\n          ...noteList2,\r\n          [action.payload.noteId]: {\r\n            ...noteId2,\r\n            checkList: {\r\n              ...checkList,\r\n              [action.payload.checkItemId]: {\r\n                ...checkItemId,\r\n                [action.payload.name]: action.payload.value\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    case UPDATE_NOTE:\r\n      return state;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  AUTH_SUCCESS,\r\n  AUTH_ERROR,\r\n  SIGN_OUT\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  authenticated: false,\r\n  error: false\r\n}\r\n\r\nexport const auth = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case AUTH_SUCCESS:\r\n      return { ...state, authenticated: true, error: false }\r\n\r\n    case AUTH_ERROR:\r\n      return { ...state, error: true }\r\n\r\n    case SIGN_OUT:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import {\r\n  NOTIFY_ON,\r\n  NOTIFY_OFF\r\n} from '../../constants/action-types';\r\n\r\nconst initialState = {\r\n  isShow: false,\r\n  content: ''\r\n}\r\n\r\nexport const notify = (state = initialState, action = {}) => {\r\n  switch (action.type) {\r\n    case NOTIFY_ON:\r\n      return { ...state, isShow: true, content: action.content }\r\n\r\n    case NOTIFY_OFF:\r\n      return initialState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { addNoteForm } from '../reducers/addNoteForm';\r\nimport { noteList } from '../reducers/noteList';\r\nimport { auth } from '../reducers/auth';\r\nimport { notify } from '../reducers/notify';\r\n\r\nexport const rootReducer = combineReducers({ addNoteForm, noteList, auth, notify });","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reducers/rootReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\n// import { createLogger } from 'redux-logger';\r\nimport { verifyAuth } from './actions/auth';\r\n\r\n// const logger = createLogger();\r\n// const store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// store.subscribe(() => {\r\n//   console.log(store.getState().noteList.noteList);\r\n// });\r\n\r\nstore.dispatch(verifyAuth());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}